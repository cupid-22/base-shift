name: "Check Submodule Changes"
description: "Checks for changes in submodule docs directories and sets the necessary output."

inputs:
  branch:
    description: "The branch to compare changes with"
    required: true
    default: "main"

outputs:
  docs_modified:
    description: "Indicates whether the docs in submodules were modified"
    value: ${{ steps.set_output.outputs.docs_modified }}

runs:
  using: "composite"
  steps:
    - name: Check for changes in submodule docs
      id: check_submodules
      run: |
        git fetch origin ${{ inputs.branch }}
        changes=$(git diff --name-only origin/${{ inputs.branch }} HEAD)
        echo "Changes detected: $changes"
        docs_changed=$(echo "$changes" | grep "applications/.*/docs")

        if [ -n "$docs_changed" ]; then
          echo "Docs have changed."
          echo "docs_modified=true" >> $GITHUB_ENV
        else
          echo "No changes in docs."
          echo "docs_modified=false" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Set output
      id: set_output
      run: |
        echo "docs_modified=${{ env.docs_modified }}" >> $GITHUB_OUTPUT
      shell: bash

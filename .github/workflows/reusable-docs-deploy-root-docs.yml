name: 🔄 Ship BaseShift Docs 🚀

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
  workflow_call:
    inputs:
      branch:
        type: string
        required: false
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set branch to checkout
        id: set_branch
        run: |
          if [[ -z "${{ inputs.branch }}" ]]; then
            echo "branch=main" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ inputs.branch }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set_branch.outputs.branch }}
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Download current gh-pages artifact
        run: |
          ARTIFACT_URL=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
            jq -r '.artifacts[] | select(.name=="github-pages") | .archive_download_url' | head -n 1)
          
          if [ -n "$ARTIFACT_URL" ]; then
            curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o current-pages.zip "$ARTIFACT_URL"
            mkdir -p current-pages
            unzip current-pages.zip -d current-pages
          else
            echo "No existing gh-pages artifact found. Starting fresh."
          fi

      - name: Download Application Docs artifact (if any)
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: application-docs
          path: ${{ github.workspace }}/application-docs

      - name: Set up Python and Install Poetry 🛠️
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: '3.10'
          specific-module: '--only docs --no-root'

      - name: Build root Sphinx documentation 🛠️
        run: poetry run make html
        working-directory: docs

      - name: Merge documentation
        run: |
          mkdir -p ${{ github.workspace }}/root-artifacts
          # Copy current gh-pages content if it exists
          if [ -d "current-pages" ]; then
            cp -R current-pages/* ${{ github.workspace }}/root-artifacts/
          fi
          # Copy application docs if they exist
          if [ -d "${{ github.workspace }}/application-docs" ]; then
            cp -R ${{ github.workspace }}/application-docs/* ${{ github.workspace }}/root-artifacts/
          fi
          # Copy newly built docs
          cp -R docs/build/html/* ${{ github.workspace }}/root-artifacts/

      - name: List artifacts (for debugging) 🧐
        run: ls -R ${{ github.workspace }}/root-artifacts/

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/root-artifacts

      - name: Deploy to GitHub Pages 📂
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Notify success or failure 🎉😞
        run: |
          if [ "${{ needs.build_and_deploy.result }}" == "success" ]; then
            echo "🚀 Build and Deploy Sphinx Docs Success! 🎉"
          else
            echo "❌ Build and Deploy Sphinx Docs Failed! 😞"
          fi
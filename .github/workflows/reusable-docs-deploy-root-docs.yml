name: 🚀 Ship BaseShift Docs 📚

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
  workflow_call:
    inputs:
      branch:
        type: string
        required: false

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set branch to checkout
        id: set_branch
        run: |
          if [[ -z "${{ inputs.branch }}" ]]; then
            echo "branch=main" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ inputs.branch }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Checkout the repository with submodules
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set_branch.outputs.branch }}
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python and Install Poetry 🛠️
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: '3.10'
          specific-module: '--only docs --no-root'

      - name: Build root Sphinx documentation 🛠️
        run: poetry run make html
        working-directory: docs

      - name: Ensure artifacts directory exists
        run: mkdir -p $GITHUB_WORKSPACE/artifacts/

      - name: Merge new documentation into artifacts using rsync 📂
        run: |
          rsync -av --ignore-existing docs/build/html/ $GITHUB_WORKSPACE/artifacts/

      - name: List artifacts (for debugging) 🧐
        run: ls -R $GITHUB_WORKSPACE/artifacts/

      - name: Upload all artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts

      - name: Deploy to GitHub Pages 📂
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Notify success or failure 🎉😞
        run: |
          if [ "${{ needs.build_and_deploy.result }}" == "success" ]; then
            echo "🚀 Build and Deploy Sphinx Docs Success! 🎉"
          else
            echo "❌ Build and Deploy Sphinx Docs Failed! 😞"
          fi

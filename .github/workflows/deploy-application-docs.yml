name: 🚀 Build and Deploy Application Sphinx Docs 📚

on:
  push:
    branches:
      - main
    paths:
      - 'applications/**/docs/**'
      - '.github/workflows/**application-docs**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies 📦
        run: |
          python -m pip install --upgrade pip
          pip install -r utils/requirements.txt

      - name: List and build docs directories
        id: build_docs
        run: |
          # Find all directories with a 'docs' folder and iterate over them
          for dir in $(find applications -type d -name 'docs' -printf '%h\n'); do
            app_name=$(basename $dir)
            echo "Processing $app_name in $dir"
            # Build the documentation
            (cd "$dir/docs" && make html)
            # Verify that the index.html file exists
            if [ -f "$dir/docs/build/html/index.html" ]; then
              echo "index.html found in $dir"
            else
              echo "Error: index.html not found in $dir"
              exit 1
            fi
            # Upload the documentation to a subfolder corresponding to the application name
            mkdir -p $GITHUB_WORKSPACE/artifacts/$app_name
            cp -r "$dir/docs/build/html/"* $GITHUB_WORKSPACE/artifacts/$app_name/
          done
        shell: bash

      - name: List artifacts (for debugging) 🧐
        run: ls -R artifacts/

      - name: Upload all artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts

      - name: Deploy to GitHub Pages 📂
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Notify success or failure 🎉😞
        run: |
          if [ "${{ needs.build_and_deploy.result }}" == "success" ]; then
            echo "🚀 Build and Deploy Sphinx Docs Success! 🎉"
          else
            echo "❌ Build and Deploy Sphinx Docs Failed! 😞"
          fi

#Explanation
#List and Build Docs Directories:
#
#This step uses inline shell commands to find all directories containing a docs folder.
#For each directory found, it builds the documentation and copies the result into a temporary artifacts directory.
#Upload All Artifacts:
#
#After all directories are processed, this step uploads the contents of the temporary artifacts directory as a single artifact. GitHub Pages will use this artifact to deploy the site.
#Notes
#Inline Shell Commands:
#
#find applications -type d -name 'docs' -printf '%h\n' lists directories containing docs folders.
#cd "$dir" && make html builds the documentation in each directory.
#cp -r "$dir/build/html" copies the built documentation to a temporary artifacts directory.
#Artifact Handling:
#
#The temporary artifacts directory collects all built documentation.
#The actions/upload-pages-artifact action uploads this directory.
#Deployment:
#
#The actions/deploy-pages action handles the deployment of the collected artifacts to GitHub Pages.

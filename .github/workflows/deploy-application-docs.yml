name: 🚀 Build and Deploy Application Sphinx Docs 📚

on:
  push:
    branches:
      - main
    paths:
      - 'applications/**/docs/**'
      - '.github/workflows/**application-docs**'
  pull_request:
    branches:
      - main
    paths:
      - 'applications/**/docs/**'
      - '.github/workflows/**application-docs**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Initialize Git submodules
        run: |
          git submodule sync
          git submodule update --init --recursive

      - name: Set up Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry 🛠️
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install docs dependencies using Poetry 📚
        run: poetry install --only docs --no-root

      - name: Build root Sphinx documentation 🛠️
        run: poetry run make html
        working-directory: docs

      - name: List and build docs directories
        id: build_docs
        run: |
          # Find 'docs' directories only at the first level within 'applications'
          docs_dir=$(find applications -mindepth 2 -maxdepth 2 -type d -name 'docs')
          echo $docs_dir
          for dir in $docs_dir; do
            app_name=$(basename $(dirname $dir))  # Get the parent directory name as app name
            echo "Processing $app_name in $dir"
            
            # Change to the docs directory
            cd "$dir"

            # Check if Sphinx is installed
            if ! command -v sphinx-build &> /dev/null; then
              echo "Sphinx not found, installing..."
              pip install sphinx
            else
              echo "Sphinx is already installed."
            fi
            
            # Build the documentation
            make html
            
            # Verify that the index.html file exists
            if [ -f "build/html/index.html" ]; then
              echo "index.html found in $dir"
            else
              echo "Error: index.html not found in $dir"
              exit 1
            fi
            
            # Upload the documentation to a subfolder corresponding to the application name
            mkdir -p $GITHUB_WORKSPACE/artifacts/$app_name
            cp -r build/html/* $GITHUB_WORKSPACE/artifacts/$app_name/
          done
        shell: bash

      - name: List artifacts (for debugging) 🧐
        run: ls -R artifacts/

      - name: Upload all artifacts
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts

      - name: Deploy to GitHub Pages 📂
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Notify success or failure 🎉😞
        run: |
          if [ "${{ needs.build_and_deploy.result }}" == "success" ]; then
            echo "🚀 Build and Deploy Sphinx Docs Success! 🎉"
          else
            echo "❌ Build and Deploy Sphinx Docs Failed! 😞"
          fi

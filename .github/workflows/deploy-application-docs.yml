name: 🚀 Build and Deploy Application Sphinx Docs 📚

on:
  workflow_run:
    workflows: ["🪝Check for Submodule Changes"]
    types: [completed]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: 'false'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Handle Git Submodules
        uses: ./.github/actions/handle-submodules
        with:
          branch: 'main'

      - name: Set up Python and Install Poetry 🛠️
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: '3.10'
          specific-module: '--only docs --no-root'

      # List and build docs directories (only if docs are modified)
      - name: List and Build Docs Directories
        id: build_docs
        run: |
          docs_dir=$(find applications -type d -name 'docs')
          echo "Docs directories found: $docs_dir"
          for dir in $docs_dir; do
            app_name=$(basename $(dirname "$dir"))
            echo "Processing $app_name in $dir"
            cd "$dir" || { echo "Failed to enter directory: $dir"; exit 1; }
          
            # Check if Sphinx is installed and build documentation
            if ! command -v sphinx-build &> /dev/null; then
              echo "Sphinx not found, installing..."
              pip install sphinx
            else
              echo "Sphinx is already installed."
            fi
          
            make html
          
            # Verify that the index.html file exists
            if [ -f "build/html/index.html" ]; then
              echo "index.html found in $dir"
            else
              echo "Error: index.html not found in $dir"
              exit 1
            fi
          
            # Upload the documentation to a subfolder corresponding to the application name
            mkdir -p $GITHUB_WORKSPACE/artifacts/$app_name
            cp -r build/html/* $GITHUB_WORKSPACE/artifacts/$app_name/
            cd ../../../
          done
        shell: bash

      - name: List Artifacts (for Debugging) 🧐
        run: ls -R artifacts/

      - name: Upload All Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts

      - name: Deploy to GitHub Pages 📂
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    if: (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.docs_modified == 'true') || github.event.label.name == 'application-docs' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Notify Success or Failure 🎉😞
        run: |
          if [ "${{ needs.build_and_deploy.result }}" == "success" ]; then
            echo "🚀 Build and Deploy Sphinx Docs Success! 🎉"
          else
            echo "❌ Build and Deploy Sphinx Docs Failed! 😞"
          fi

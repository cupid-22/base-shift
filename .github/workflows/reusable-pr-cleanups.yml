name: ðŸ”„ Post PR Clean-ups

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sunday at midnight
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: false
        type: number
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: false
        type: number
      pr_action:
        description: 'Current state of PR'
        required: false
        type: string
      base_ref:
        description: 'Base branch reference'
        required: false
        type: string
      head_ref:
        description: 'Head branch reference'
        required: false
        type: string

jobs:
  check_conditions:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Check conditions
        id: check
        run: |
          # Check if PR number is available either from event or input
          PR_NUMBER="${{ github.event.pull_request.number || github.event.number || inputs.pr_number }}"

          if [[ -z "$PR_NUMBER" && "${{ github.event_name }}" != "schedule" ]]; then
            echo "No PR number found and this is not a scheduled run. Exiting."
            exit 1
          fi

          echo "pr_number=${PR_NUMBER:-'scheduled-run'}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Debug step
        run: |
          echo "PR Number: ${{ steps.check.outputs.pr_number }}"
          echo "pr_action: ${{ inputs.pr_action || 'not provided' }}"
          echo "base_ref: ${{ inputs.base_ref || 'not provided' }}"
          echo "head_ref: ${{ inputs.head_ref || 'not provided' }}"

  prune-dead-branches:
    needs: check_conditions
    runs-on: ubuntu-latest
    if: ${{ steps.check.outputs.pr_number != 'scheduled-run' || github.event_name == 'schedule' }}  # Proceed if it's a scheduled run or PR number is found
    steps:
      - name: Checkout the repository with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Handle Git Submodules
        uses: ./.github/actions/handle-submodules
        with:
          branch: ${{ inputs.head_ref || github.head_ref || 'main' }}

      - name: Run Clean-up scripts
        uses: ./.github/actions/clean-up
        with:
          repo_path: '.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  misc-checks:
    needs: check_conditions
    runs-on: ubuntu-latest
    if: ${{ steps.check.outputs.pr_number != 'scheduled-run' || github.event_name == 'schedule' }}  # Proceed if it's a scheduled run or PR number is found
    steps:
      - name: Checkout the repository with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Handle Git Submodules
        uses: ./.github/actions/handle-submodules
        with:
          branch: ${{ inputs.head_ref || github.head_ref || 'main' }}

      - name: Check for large file post merge
        run: |
          # Set size limit (in bytes)
          size_limit=10000000  # 10 MB

          # Find large files
          large_files=$(find . -type f -size +${size_limit}c)

          if [ -n "$large_files" ]; then
            echo "Warning: The following files are larger than the size limit (${size_limit} bytes):"
            echo "$large_files"
          else
            echo "No large files found."
          fi

name: ðŸ§¹ Post PR Clean-ups

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/reusable-pr-cleanups.yml'
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
      base_ref:
        description: 'Base branch reference'
        required: false
        type: string
      head_ref:
        description: 'Head branch reference'
        required: false
        type: string

jobs:
  prune-dead-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle Git Submodules
        uses: ./.github/actions/handle-submodules
        with:
          branch: ${{ inputs.head_ref || github.head_ref || 'main' }}

      - name: Run Clean-up scripts
        uses: ./.github/actions/clean-up
        with:
          repo_path: '.'

  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Add logic to update release notes
          # For example, you could append the PR description to a CHANGELOG.md file
          PR_DESCRIPTION=$(gh pr view ${{ inputs.pr_number }} --json body --jq .body)
          echo "## PR #${{ inputs.pr_number }}" >> CHANGELOG.md
          echo "$PR_DESCRIPTION" >> CHANGELOG.md

  cleanup-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete merged branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=$(gh pr view ${{ inputs.pr_number }} --json headRefName --jq .headRefName)
          git push origin --delete $BRANCH_NAME
name: "Pull Request Size Labeler"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  pr-labeler:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Fetch all branches
        run: |
          set -e  # Exit immediately if any command fails
          git fetch origin +refs/heads/*:refs/remotes/origin/*

      - name: Calculate lines of code
        id: diff
        run: |
          set -e  # Exit immediately if any command fails
          LOC=$(git diff --shortstat origin/main...HEAD | awk '{print $1}')
          if [ -z "$LOC" ]; then
            echo "No lines of code changed. Applying 'no changes' label."
            LOC=0
          fi
          echo "lines_of_code=$LOC" >> $GITHUB_ENV

      - name: Set PR size label
        id: set-label
        run: |
          set -e  # Exit immediately if any command fails
          echo "Lines of code changed: ${{ env.lines_of_code }}"

          if [ ${{ env.lines_of_code }} -eq 0 ]; then
            echo "PR has no changes"
            echo "no-changes" > size.txt
          elif [ ${{ env.lines_of_code }} -lt 10 ]; then
            echo "PR size is small"
            echo "small" > size.txt
          elif [ ${{ env.lines_of_code }} -lt 50 ]; then
            echo "PR size is medium"
            echo "medium" > size.txt
          elif [ ${{ env.lines_of_code }} -lt 100 ]; then
            echo "PR size is large"
            echo "large" > size.txt
          else
            echo "PR size is extra-large"
            echo "extra-large" > size.txt
          fi
          PR_LABEL=$(cat size.txt)
          echo "pr-label=$PR_LABEL" >> $GITHUB_ENV

      - name: Check existing labels
        id: check-labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set the GH_TOKEN environment variable
        run: |
          # Attempt to get existing labels and handle failure gracefully
          LABELS=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name' || echo "")
          echo "Existing labels: $LABELS"
          echo $LABELS | grep -q "${{ env.pr-label }}" || echo "0" > label_exists.txt
          echo $LABELS | grep -q "${{ env.pr-label }}" && echo "1" > label_exists.txt || echo "0" > label_exists.txt
          echo "label_exists=$(cat label_exists.txt)" >> $GITHUB_ENV  # 1 if exists, 0 if not

      - name: Apply label to PR
        if: env.label_exists == '0'  # Only apply if the label doesn't exist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set the GH_TOKEN environment variable
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ env.pr-label }}

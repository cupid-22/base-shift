name: ðŸ”„ Ongoing PR Workflows

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
      pr_action:
        description: 'Current state of PR'
        required: true
        type: string
      base_ref:
        description: 'Base branch reference'
        required: false
        type: string
      head_ref:
        description: 'Head branch reference'
        required: false
        type: string

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run code linters
        run: | 
          echo "Run code level linters here ..."
      - name: Run branch linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ inputs.pr_number }}"
          BRANCH_NAME=$(gh pr view $PR_NUMBER --json headRefName --jq .headRefName)
          VALID_PREFIX="^(docs|feature|bug|story|chore|refactor|test)/"
          if [[ ! $BRANCH_NAME =~ $VALID_PREFIX ]]; then
            COMMENT="Branch name '$BRANCH_NAME' does not follow the standard format. Please use one of the following prefixes: docs/, feature/, bug/, story/, chore/, refactor/, or test/"
            gh pr comment $PR_NUMBER --body "$COMMENT"
          fi

  pr-labeler:
    runs-on: ubuntu-latest
    needs: check_conditions
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate lines of code
        id: diff
        env:
          BASE_REF: ${{ inputs.base_ref || github.base_ref }}
          HEAD_REF: ${{ inputs.head_ref || github.head_ref }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          LOC=$(git diff --shortstat origin/${BASE_REF}...${HEAD_REF} | awk '{print $1}')
          echo "lines_of_code=${LOC:-0}" >> $GITHUB_ENV

      - name: Determine PR size label
#        if: ${{ env.lines_of_code }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: determine-label
        run: |
          if [ ${{ env.lines_of_code }} -eq 0 ]; then
            echo "label=no-changes" >> $GITHUB_OUTPUT
            echo "color=CCCCCC" >> $GITHUB_OUTPUT
          elif [ ${{ env.lines_of_code }} -lt 10 ]; then
            echo "label=size/XS" >> $GITHUB_OUTPUT
            echo "color=87CEFA" >> $GITHUB_OUTPUT
          elif [ ${{ env.lines_of_code }} -lt 50 ]; then
            echo "label=size/S" >> $GITHUB_OUTPUT
            echo "color=66CDAA" >> $GITHUB_OUTPUT
          elif [ ${{ env.lines_of_code }} -lt 100 ]; then
            echo "label=size/M" >> $GITHUB_OUTPUT
            echo "color=FFFF00" >> $GITHUB_OUTPUT
          elif [ ${{ env.lines_of_code }} -lt 500 ]; then
            echo "label=size/L" >> $GITHUB_OUTPUT
            echo "color=FFA500" >> $GITHUB_OUTPUT
          else
            echo "label=size/XL" >> $GITHUB_OUTPUT
            echo "color=FF4500" >> $GITHUB_OUTPUT
          fi

      - name: Check existing labels
        id: check-labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ needs.check_conditions.outputs.pr_number }}
        run: |
          LABELS=$(gh pr view $PR_NUMBER --json labels --jq '.labels[].name')
          if echo "$LABELS" | grep -q "${{ steps.determine-label.outputs.label }}"; then
            echo "label_exists=true" >> $GITHUB_OUTPUT
          else
            echo "label_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create or update label
        if: steps.check-labels.outputs.label_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ needs.check_conditions.outputs.pr_number }}
        run: |
          gh label create "${{ steps.determine-label.outputs.label }}" \
            --color "${{ steps.determine-label.outputs.color }}" \
            --description "PR size: ${{ steps.determine-label.outputs.label }}" \
            || true
          gh pr edit $PR_NUMBER --add-label "${{ steps.determine-label.outputs.label }}"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: |
          # Add your test commands here
          echo "Running tests..."
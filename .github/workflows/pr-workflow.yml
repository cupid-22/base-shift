name: ðŸ’¾ [Core] PR Workflow

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
      debug_mode:
        description: 'Enable debug mode for extra information'
        required: false
        default: false
        type: boolean

jobs:
  pulse_checks:
    runs-on: ubuntu-latest
    outputs:
      pr_exists: ${{ steps.check_pr.outputs.exists }}
      pr_state: ${{ steps.check_pr.outputs.state }}
      pr_action: ${{ steps.check_pr.outputs.action }}
    steps:
      - name: Check if PR exists and get state
        id: check_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number || inputs.pr_number }}"
          echo "$PR_NUMBER"
          if gh pr view $PR_NUMBER &> /dev/null; then
            echo "Could find PR details"
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            STATE=$(gh pr view $PR_NUMBER --json state --jq .state)
            echo "pr_state=$STATE" >> $GITHUB_OUTPUT
            echo "pr_action=${{ github.event.action }}" >> $GITHUB_OUTPUT
          else
            echo "Maybe the PR do not exist"
            echo "pr_exists=false" >> $GITHUB_OUTPUT
            echo "pr_state=unknown" >> $GITHUB_OUTPUT
            echo "pr_action=unknown" >> $GITHUB_OUTPUT
          fi

  debug_mode:
    needs: [pulse_checks]
    if: ${{ inputs.debug_mode == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Run detailed debug information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ""
          echo "Debug Info:"

          echo ""
          echo "Condition satisfying 'opened_pr_workflows':"
          echo "needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'OPEN' && (needs.pulse_checks.outputs.pr_action == 'opened' || needs.pulse_checks.outputs.pr_action == 'reopened')"
          echo "PR Exists: ${{ needs.pulse_checks.outputs.pr_exists }}"
          echo "PR State: ${{ needs.pulse_checks.outputs.pr_state }}"
          echo "PR Action: ${{ needs.pulse_checks.outputs.pr_action }}"

          echo ""
          echo "Condition for 'ongoing_pr_workflows':"
          echo "needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'OPEN'"
          echo "PR Exists: ${{ needs.pulse_checks.outputs.pr_exists }}"
          echo "PR State: ${{ needs.pulse_checks.outputs.pr_state }}"

          echo ""
          echo "Condition for 'closed_pr_workflows':"
          echo "needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'CLOSED' && github.event.pull_request.merged == true"
          echo "PR Exists: ${{ needs.pulse_checks.outputs.pr_exists }}"
          echo "PR State: ${{ needs.pulse_checks.outputs.pr_state }}"
          echo "PR Merged: ${{ github.event.pull_request.merged }} (Expected: true)"

  opened_pr_workflows:
    needs: pulse_checks
    if: needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'OPEN' && (needs.pulse_checks.outputs.pr_action == 'opened' || needs.pulse_checks.outputs.pr_action == 'reopened')
    uses: ./.github/workflows/reusable-pr-initiate.yml
    with:
      pr_number: ${{ github.event.pull_request.number || inputs.pr_number }}
      base_ref: ${{ github.base_ref }}
      head_ref: ${{ github.head_ref }}
      pr_action: ${{ needs.pulse_checks.outputs.pr_action }}
    secrets: inherit

  ongoing_pr_workflows:
    needs: pulse_checks
    if: needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'OPEN'
    uses: ./.github/workflows/reusable-pr-ongoing.yml
    with:
      pr_number: ${{ github.event.pull_request.number || inputs.pr_number }}
      base_ref: ${{ github.base_ref }}
      head_ref: ${{ github.head_ref }}
      pr_action: ${{ needs.pulse_checks.outputs.pr_action }}
    secrets: inherit

  closed_pr_workflows:
    needs: pulse_checks
    if: needs.pulse_checks.outputs.pr_exists == 'true' && needs.pulse_checks.outputs.pr_state == 'CLOSED' && github.event.pull_request.merged == true
    uses: ./.github/workflows/reusable-pr-cleanups.yml
    with:
      pr_number: ${{ github.event.pull_request.number || inputs.pr_number }}
      base_ref: ${{ github.base_ref }}
      head_ref: ${{ github.head_ref }}
      pr_action: ${{ needs.pulse_checks.outputs.pr_action }}
    secrets: inherit

  notify:
    needs: [ pulse_checks, opened_pr_workflows, ongoing_pr_workflows, closed_pr_workflows ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify result
        run: |
          if [ "${{ needs.pulse_checks.result }}" == "success" ] && \
             ([ "${{ needs.opened_pr_workflows.result }}" == "success" ] || [ "${{ needs.opened_pr_workflows.result }}" == "skipped" ]) && \
             ([ "${{ needs.ongoing_pr_workflows.result }}" == "success" ] || [ "${{ needs.ongoing_pr_workflows.result }}" == "skipped" ]) && \
             ([ "${{ needs.closed_pr_workflows.result }}" == "success" ] || [ "${{ needs.closed_pr_workflows.result }}" == "skipped" ]); then
            echo "PR workflow completed successfully"
          else
            echo "PR workflow failed or some jobs were skipped"
          fi
        # Add actual notification logic here (e.g., sending to Slack, email, etc.)
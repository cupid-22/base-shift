name: üîÑ Open Pull Request Workflow Jobs

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: number
      pr_action:
        description: 'Current state of PR'
        required: true
        type: string
      base_ref:
        description: 'Base branch reference'
        required: false
        type: string
      head_ref:
        description: 'Head branch reference'
        required: false
        type: string

jobs:
  check_conditions:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      pr_number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Check conditions
        id: check
        run: |
          # Initialize variables
          SHOULD_RUN="false"
          
          # Get PR number from various sources
          PR_NUMBER="${{ github.event.pull_request.number || github.event.number || inputs.pr_number }}"
          
          # Basic validation
          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR number found. Exiting."
            exit 1
          fi
          
          # Check if the event is 'pull_request'
          if [ "${{ github.event_name }}" == "pull_request" ] && [ ! -z "${{ github.event.action }}" ]; then
            SHOULD_RUN="true"
          
          # Check workflow_dispatch conditions
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            SHOULD_RUN="true"
          
          # Check workflow_call conditions
          elif [ "${{ github.event_name }}" == "workflow_call" ] && [ ! -z "${{ inputs.pr_action }}" ]; then
            SHOULD_RUN="true"
          fi

          # Output the results
          echo "should_run=${SHOULD_RUN}" >> $GITHUB_OUTPUT
          echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Debug step
        run: |
          echo "Should Run: ${{ steps.check.outputs.should_run }}"
          echo "PR Number: ${{ steps.check.outputs.pr_number }}"
          echo "Event type: ${{ github.event_name }}"
          echo "PR Action: ${{ inputs.pr_action || 'not provided' }}"
          echo "Base ref: ${{ inputs.base_ref || 'not provided' }}"
          echo "Head ref: ${{ inputs.head_ref || 'not provided' }}"
          
          # Additional debug information
          echo "Event context:"
          echo "  Event name: ${{ github.event_name }}"
          echo "  Input PR number: ${{ inputs.pr_number || 'not provided' }}"
          echo "  Event PR number: ${{ github.event.pull_request.number || github.event.number || 'not provided' }}"

  pr-assign-reviewer:
    needs: check_conditions
    runs-on: ubuntu-latest
    if: needs.check_conditions.outputs.should_run == 'true'
    steps:
      - name: Debug Information
        run: |
          echo "PR Number: ${{ needs.check_conditions.outputs.pr_number }}"
          echo "Should Run: ${{ needs.check_conditions.outputs.should_run }}"
          echo "Base Branch: ${{ needs.check_conditions.outputs.base_branch }}"
          echo "Event Type: ${{ github.event_name }}"

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Assign reviewer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ needs.check_conditions.outputs.pr_number }}
        run: |
          # Retrieve the pull request number, either from event or as input
          REVIEWER="cupid-22"
          EXISTING_REVIEWERS=$(gh pr view $PR_NUMBER --json reviewRequests --jq '.reviewRequests[].login')

          if [[ ! $EXISTING_REVIEWERS =~ $REVIEWER ]]; then
            if ! gh pr edit $PR_NUMBER --add-reviewer "$REVIEWER"; then
              echo "Failed to assign reviewer"
              exit 1
            fi
            echo "Successfully assigned reviewer: $REVIEWER"
          else
            echo "Reviewer $REVIEWER is already assigned."
          fi

  pr-description:
    runs-on: ubuntu-latest
    needs: check_conditions
    if: needs.check_conditions.outputs.should_run == 'true'
    steps:
      - name: Debug Information
        run: |
          echo "PR Number: ${{ needs.check_conditions.outputs.pr_number }}"
          echo "Should Run: ${{ needs.check_conditions.outputs.should_run }}"
          echo "Base Branch: ${{ needs.check_conditions.outputs.base_branch }}"
          echo "Event Type: ${{ github.event_name }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add PR template
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ needs.check_conditions.outputs.pr_number }}
        run: |
          # First check if PR already has a description
          CURRENT_BODY=$(gh pr view $PR_NUMBER --json body --jq '.body')
          
          if [[ -z "$CURRENT_BODY" ]]; then
            PR_BODY=$(cat << 'EOF'
          # Pull Request Details üöÄ
          
          ## Change Description
          <!-- Please provide a detailed description of your changes -->
          
          ## Ticket Details
          **Jira Ticket:** [TICKET-XXX](https://your-jira-url/TICKET-XXX)
          **Type:** Feature/Bug/Enhancement
          
          ## Type of Change
          - [ ] üêõ Bug fix
          - [ ] ‚ú® New feature
          - [ ] üí• Breaking change
          - [ ] üìö Documentation update
          
          ## Quality Checks
          - [ ] ‚úÖ ESLint
          - [ ] üé® Prettier
          - [ ] üß™ Unit Tests
          - [ ] üîÑ Integration Tests
          
          ## Additional Notes
          <!-- Add any additional notes, considerations, or context about the changes -->
          
          ---
          > **Remember to:**
          > - Link the Board ticket
          > - Update documentation if needed
          > - Add/update tests as needed
          EOF
          )
          
            # Update the PR body with the template
            if ! gh pr edit $PR_NUMBER --body "$PR_BODY"; then
              echo "Failed to update PR description"
              exit 1
            fi
            echo "Successfully added PR template"
          else
            echo "PR already has a description. Skipping template addition."
          fi
